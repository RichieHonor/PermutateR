devtools::document()
traceback()
devtools::document()
devtools::document()
warnings()
warnings()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install("PermutateR")
devtools::install("PermutateR")
devtools::install(".")
e(1)
exp(1)
log(exp(1))
log(40)
exp(log(40))
log10(100)
devtools::update_packages()
1
devtools::update_packages()
devtools::install()
devtools::load_all()
library("PermutateR")
Variable<-as.name(Variable)
devtools::document()
print("f")
df<-data.frame(a=1:10,b=11:20)
df
sample(df)
sample(df)
sample(df)
apply(df,2,sample)
apply(df,2,sample)
apply(df,2,sample)
apply(df,2,sample)
df[[c("a","b")]]
df[,c("a","b")]
df[,!c("a","b")]
apply(df[["a"]],2,sample)
apply(df[["a"]],2,sample)
apply(df[,"a"],2,sample)
apply(df,2,sample)
apply(df$a,2,sample)
apply(df[,c("a","b")],2,sample)
df<-data.frame(a=1:10,b=11:20,c=21:30)
apply(df[,c("a","b")],2,sample)
df[,c("a","b")]
=dplyr::select(df,"a")
dplyr::select(df,"a")
dplyr::select(df,!"a") #dplyr will do the trick and then can sample over desired columns without need for a for loop.
data.frame(a=1:10,b=11:20,c=21:30)
col<-c("a","b")
dplyr::select(df,col) #dplyr will do the trick and then can sample over desired columns without need for a for loop.
col<-c("a","b")
dplyr::select(df,col) #dplyr will do the trick and then can sample over desired columns without need for a for loop.
df<-data.frame(a=1:10,b=11:20,c=21:30)
col<-c("a","b")
dplyr::select(df,col) #dplyr will do the trick and then can sample over desired columns without need for a for loop.
dplyr::select(df,!col) #dplyr will do the trick and then can sample over desired columns without need for a for loop.
apply(df,2,sample)
devtools::document()
devtools::document()
